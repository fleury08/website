{% block navigation %}

    <nav class="navbar navbar-expand-lg" id="navbar">
        <div class="container">
            <div class="d-flex navbar-text cutout-wrapper">

                <svg height="24" width="24">
                    <use xlink:href="{{request.static_url('jstanek:static/img/bootstrap-icons.svg')}}#sun" fill="currentColor"></use>
                </svg>
                <div class="form-check form-switch ml-2">
                  <input type="checkbox" class="form-check-input" id="switchColorMode">
                </div>
                <svg height="24" width="24">
                    <use xlink:href="{{request.static_url('jstanek:static/img/bootstrap-icons.svg')}}#moon" fill="currentColor"></use>
                </svg>
            </div>
            <div class="d-flex navbar-text cutout-wrapper">
{#                <div class="d-flex">#}
{#                    <a href="#cz" class="ml-1 mr-1">#}
{#                        <svg height="16" width="24" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-cz" viewBox="0 0 640 480">#}
{#                          <path fill="#ffffff" d="M0 0h640v240H0z"/>#}
{#                          <path fill="#d7141a" d="M0 240h640v240H0z"/>#}
{#                          <path fill="#11457e" d="M360 240 0 0V480z"/>#}
{#                        </svg>#}
{#                    </a>#}
{#                    <a href="#en" class="ml-1 mr-1">#}
{#                        <svg  height="16" width="24" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-gb" viewBox="0 0 640 480">#}
{#                          <path fill="#012169" d="M0 0h640v480H0z"/>#}
{#                          <path fill="#FFF" d="M75 0l244 181L562 0h78v62L400 241l240 178v61h-80L320 301 81 480H0v-60l239-178L0 64V0h75z"/>#}
{#                          <path fill="#C8102E" d="M424 281l216 159v40L369 281h55zm-184 20l6 35L54 480H0l240-179zM640 0v3L391 191l2-44L590 0h50zM0 0l239 176h-60L0 42V0z"/>#}
{#                          <path fill="#FFF" d="M241 0v480h160V0H241zM0 160v160h640V160H0z"/>#}
{#                          <path fill="#C8102E" d="M0 193v96h640v-96H0zM273 0v480h96V0h-96z"/>#}
{#                        </svg>#}
{#                    </a>#}
{#                </div>#}
                <div class="d-flex">
                    <a href="#" id="website-logo" class="align-top"></a>
                </div>
            </div>
        </div>
    </nav>
    <div class="w-100 fixed-top">
        <div class="progress" style="height: 2px;">
          <div id="scroll-percentage" class="progress-bar" role="progressbar"></div>
        </div>
    </div>
    <script>
            //determines if the user has a set theme
        function detectColorScheme(){
            var theme="light";    //default to light

            //local storage is used to override OS theme settings
            if(localStorage.getItem("theme")){
                if(localStorage.getItem("theme") == "dark"){
                    var theme = "dark";
                }
            } else if(!window.matchMedia) {
                //matchMedia method not supported
                return false;
            } else if(window.matchMedia("(prefers-color-scheme: dark)").matches) {
                //OS theme setting detected as dark
                var theme = "dark";
            }

            //dark theme preferred, set document with a `data-theme` attribute
            if (theme=="dark") {
                 document.documentElement.setAttribute("data-theme", "dark");
            }
            console.log(theme);
        }
        detectColorScheme();

        //identify the toggle switch HTML element
        const toggleSwitch = document.querySelector('#switchColorMode');

        //function that changes the theme, and sets a localStorage variable to track the theme between page loads
        function switchTheme(e) {
            if (e.target.checked) {
                localStorage.setItem('theme', 'dark');
                document.documentElement.setAttribute('data-theme', 'dark');
                toggleSwitch.checked = true;
            } else {
                localStorage.setItem('theme', 'light');
                document.documentElement.setAttribute('data-theme', 'light');
                toggleSwitch.checked = false;
            }
        }

        //listener for changing themes
        toggleSwitch.addEventListener('change', switchTheme, false);

        //pre-check the dark-theme checkbox if dark-theme is set
        if (document.documentElement.getAttribute("data-theme") == "dark"){
            toggleSwitch.checked = true;
        }

        const updateScrollPercentage = function() {
			const heightOfWindow = window.innerHeight,
				contentScrolled = window.pageYOffset,
				bodyHeight = document.body.offsetHeight,
				percentageVal = document.querySelector("#scroll-percentage")

			if(bodyHeight - contentScrolled <= heightOfWindow) {
				percentageVal.style.width = "100%"
			}
			else {
				const total = bodyHeight - heightOfWindow,
					got = contentScrolled,
					percent = parseInt((got/total) * 100)
				percentageVal.style.width = percent + "%"
			}
		}

		window.addEventListener('scroll', updateScrollPercentage)
    </script>
{% endblock navigation %}
